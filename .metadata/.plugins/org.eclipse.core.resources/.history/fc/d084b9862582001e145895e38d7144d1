<?php

namespace App\Form;

use App\Entity\Paquet;
use App\Entity\User;
use App\Entity\Carte;
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\OptionsResolver\OptionsResolver;
use Symfony\Bridge\Doctrine\Form\Type\EntityType;
use Symfony\Component\Form\FormEvent;
use Symfony\Component\Form\FormEvents;
use Symfony\Bundle\SecurityBundle\Security;

class PaquetType extends AbstractType
{
    public function __construct(
        private Security $security,
        ) {
    }
    
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
        $user = $this->security->getUser();
        if (!$user) {
            throw new \LogicException(
                'The edit form cannot be used without an authenticated user!'
                );
        }
        $builder
            ->add('description')
            ->add('publique')
            ->addEventListener(FormEvents::PRE_SET_DATA, function (FormEvent $event) use ($user): void {
                $product = $event->getData();
                $form = $event->getForm();
                $cartes= [];
                foreach ($product->getItems() as $carte){
                    if (in_array($carte , $user->getCartes()->toArray())) {
                        array_push($cartes, $carte);
                        $form->add('carte', EntityType::class, [
                            'class' => Carte::class,
                            'placeholder' => '',
                            'choices' => $positions
                        ]);
                    }
                }

            })
        ;
    }

    public function configureOptions(OptionsResolver $resolver): void
    {
        $resolver->setDefaults([
            'data_class' => Paquet::class,
        ]);
    }
}
